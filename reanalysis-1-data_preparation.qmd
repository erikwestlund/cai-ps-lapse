---
title: "Reanalysis Step 1: Data Preparation"
subtitle: "Loading and preparing the combined dataset for multiple imputation analysis"
author: "Erik Westlund"
date: "`r Sys.Date()`"
format: html
---

## Setup

```{r setup}
#| include: false
# Setup analysis environment
source("dependencies.R")
setup_analysis()
```

## Data Loading

```{r load-data}
# Load the combined dataset
df_combined <- readr::read_csv(reanalysis_data_file_path)
```

## Define Analysis Variables

```{r define-variables}
# Variables for propensity score model
ps_vars <- c(
  "baseline_VA_logMAR",
  "gender",
  "race_ethnicity_gp", 
  "insurance_gp",
  "age",
  "CCI",
  "DCSI",
  "other_inject",
  "anti_VEGF",
  "focal_laser_flag",
  "PRP_flag",
  "Glaucoma_bef_hitplus",
  "Otherretina_bef_hitplus",
  "cataract_surgery_bef_hitplus"
)

# Variables for outcome models
outcome_vars <- c(
  "outcome_VA_logMAR",
  "person_ever_lapse"
)

# Variables for DR severity and treatment categorization
dr_vars <- c(
  "No_DR",
  "NPDR",
  "PDR"
)

# All analysis variables
all_analysis_vars <- c(
  "e_mrn_deidentified",  # Patient ID
  ps_vars,
  outcome_vars,
  dr_vars
)
```

## Missing Data Handling Strategy

**Modified approach for the reanalysis:**

1. **Glaucoma/Other Retina Conditions**: Missing values are recoded as 0 (absence of condition)
   - Clinical assumption: These conditions would be documented if present
   - This recoding happens BEFORE propensity score modeling
   - Maintains consistency with original analysis
   - **Is this assumption valid?** Do we want to impute these?
   
2. **CCI/DCSI**: **NEW - Will be imputed** (change from original analysis)
   - Original analysis excluded rows with missing CCI/DCSI
   - Reanalysis will impute these to preserve sample size and reduce bias
   - These comorbidity indices can be imputed from patient demographics and clinical characteristics

3. **Other variables**: Missing values will be handled via multiple imputation in the next step

## Variable Creation

```{r create-variables}
# Step 1: Create person_dr first (needed for imputation)
df_analysis <- df_combined |>
  create_person_dr()  # Creates person_dr from No_DR/NPDR/PDR

# Step 2: Create other core variables
df_analysis <- df_analysis |>
  mutate(
    # Exposure variable
    ever_lapse_binary = if_else(person_ever_lapse == TRUE, 1, 0),
    
    # Demographic factors (keep as factors for models)
    gender_cat = factor(gender),
    race_ethnic_cat = factor(race_ethnicity_gp),
    insurance_cat = factor(insurance_gp),
    
    # Comorbidity indicators as factors (missing = no condition)
    glaucoma_bef_hitplus_cat = factor(case_when(
      Glaucoma_bef_hitplus == "Present" ~ 1,
      TRUE ~ 0  # Includes NA values coded as 0 (no glaucoma)
    )),
    otherretina_bef_hitplus_cat = factor(case_when(
      Otherretina_bef_hitplus == "Present" ~ 1,
      TRUE ~ 0  # Includes NA values coded as 0 (no other retina condition)
    )),
    catsurg_before_hitplus_cat = factor(cataract_surgery_bef_hitplus),
    
    # Treatment indicators as factors
    other_inject = factor(other_inject),
    anti_VEGF = factor(anti_VEGF),
    focal_laser_flag = factor(focal_laser_flag),
    PRP_flag = factor(PRP_flag)
  )

# Step 3: Create derived variables using transformation functions
df_analysis <- df_analysis |>
  create_outcome_variables() |>  # Creates outcome_va_vi_binary from logMAR
  create_age_cat() |>  # Creates age_cat from continuous age
  create_treatment_type() |>  # Creates treatment_type and any_treatment
  create_dr_severity_variables()  # Creates person_dr_severity and dr_severity factor
```

## Missing Data Assessment

```{r missing-assessment}
# Variables used in propensity score model
ps_model_vars <- c(
  "ever_lapse_binary",
  "baseline_VA_logMAR",
  "gender_cat",
  "race_ethnic_cat", 
  "insurance_cat",
  "age_cat",
  "CCI",
  "DCSI",
  "other_inject",
  "anti_VEGF",
  "focal_laser_flag",
  "PRP_flag",
  "glaucoma_bef_hitplus_cat",  # Missing already coded as 0 (no condition)
  "otherretina_bef_hitplus_cat",  # Missing already coded as 0 (no condition)
  "catsurg_before_hitplus_cat"
)

# Variables used in outcome model
outcome_model_vars <- c(
  "outcome_va_vi_binary",
  ps_model_vars  # All PS vars are also in outcome model
)

# Assess missing data BEFORE recoding (for documentation)
missing_before_recoding <- df_combined |>
  dplyr::select(dplyr::all_of(c(
    "baseline_VA_logMAR", "CCI", "DCSI", 
    "Glaucoma_bef_hitplus", "Otherretina_bef_hitplus",
    "cataract_surgery_bef_hitplus"
  ))) |>
  dplyr::summarise(dplyr::across(everything(), ~ sum(is.na(.)))) |>
  tidyr::pivot_longer(everything(), names_to = "variable", values_to = "n_missing_original")

# Assess missing data AFTER recoding
missing_summary <- df_analysis |>
  dplyr::select(dplyr::all_of(c(ps_model_vars, "outcome_va_vi_binary"))) |>
  dplyr::summarise(dplyr::across(everything(), ~ sum(is.na(.)))) |>
  tidyr::pivot_longer(everything(), names_to = "variable", values_to = "n_missing") |>
  dplyr::mutate(
    pct_missing = round(n_missing / nrow(df_analysis) * 100, 2),
    var_type = dplyr::case_when(
      variable %in% c("outcome_va_vi_binary") ~ "Outcome",
      variable == "ever_lapse_binary" ~ "Exposure",
      variable %in% c("glaucoma_bef_hitplus_cat", "otherretina_bef_hitplus_cat") ~ "Covariate (recoded)",
      TRUE ~ "Covariate"
    ),
    handling = dplyr::case_when(
      variable %in% c("glaucoma_bef_hitplus_cat", "otherretina_bef_hitplus_cat") ~ "Missing â†’ 0 (no condition)",
      variable %in% c("CCI", "DCSI") ~ "To be imputed",
      TRUE ~ "To be imputed"
    )
  ) |>
  dplyr::arrange(desc(n_missing))

# Display missing data summary
missing_summary |> 
  filter(n_missing > 0) |>
  kable(caption = "Variables with missing data after recoding (glaucoma/retina conditions coded as 0)")
```

## Data Summary for Analysis Variables

```{r data-summary}
# Summary of key variables
summary_vars <- c(
  "outcome_va_vi_binary",
  "ever_lapse_binary", 
  "dr_severity",
  "treatment_type",
  "age",
  "CCI",
  "DCSI"
)

# Create summary table
df_analysis |>
  dplyr::select(dplyr::all_of(summary_vars)) |>
  summary()

# Distribution of outcome by exposure
table(df_analysis$outcome_va_vi_binary, df_analysis$ever_lapse_binary, 
      dnn = c("Vision Impairment", "Ever Lapsed"))

# Distribution of DR severity
table(df_analysis$dr_severity, useNA = "ifany")

# Distribution of treatment types
table(df_analysis$treatment_type, useNA = "ifany")
```

## Dataset for Imputation

```{r imputation-dataset}
# Full dataset for imputation (no exclusions for missing CCI/DCSI)
df_for_imputation <- df_analysis

# For comparison, create complete case dataset (as in original analysis)
df_complete_original <- df_analysis |>
  filter(!is.na(CCI) & !is.na(DCSI))

# Summary of datasets
n_total <- nrow(df_analysis)
n_complete_original <- nrow(df_complete_original)
n_gained_by_imputation <- n_total - n_complete_original

tibble(
  Dataset = c(
    "Full dataset (for imputation)",
    "Complete cases (original approach)", 
    "Additional observations from imputation"
  ),
  N = c(n_total, n_complete_original, n_gained_by_imputation),
  Percent = c(
    100, 
    round(n_complete_original/n_total*100, 1), 
    round(n_gained_by_imputation/n_total*100, 1)
  )
) |>
  kable(caption = "Sample size comparison: Imputation vs complete case approach")
```

## Save Prepared Data

```{r save-data}
# Create directories if they don't exist
if (!dir.exists(reanalysis_data_dir)) {
  dir.create(reanalysis_data_dir, recursive = TRUE)
}

# Save the prepared datasets to network drive
saveRDS(df_for_imputation, file.path(reanalysis_data_dir, "df_for_imputation.rds"))
saveRDS(df_complete_original, file.path(reanalysis_data_dir, "df_complete_original.rds"))

# Save variable lists for use in other scripts
variable_lists <- list(
  ps_model_vars = ps_model_vars,
  outcome_model_vars = outcome_model_vars,
  dr_vars = dr_vars,
  all_analysis_vars = all_analysis_vars
)
saveRDS(variable_lists, file.path(reanalysis_data_dir, "variable_lists.rds"))

# Confirm files saved
message("Data saved to: ", reanalysis_data_dir)
```

## Summary

```{r summary}
# Final summary
tibble(
  Metric = c(
    "Total observations",
    "Complete cases (original approach)", 
    "Missing CCI or DCSI (to be imputed)",
    "Missing baseline VA (to be imputed)",
    "Patients who lapsed",
    "Patients with vision impairment"
  ),
  N = c(
    nrow(df_for_imputation),
    nrow(df_complete_original),
    sum(is.na(df_for_imputation$CCI) | is.na(df_for_imputation$DCSI)),
    sum(is.na(df_for_imputation$baseline_VA_logMAR)),
    sum(df_for_imputation$ever_lapse_binary == 1, na.rm = TRUE),
    sum(df_for_imputation$outcome_va_vi_binary == 1, na.rm = TRUE)
  )
) |>
  kable(caption = "Dataset summary for reanalysis with imputation")
```

## Next Steps

1. **Multiple Imputation** (`reanalysis-2-multiple_imputation.qmd`): Impute missing values in covariates
2. **Propensity Score Analysis** (`reanalysis-3-propensity_scores.qmd`): Calculate PS using various methods on imputed datasets
3. **Outcome Analysis** (`reanalysis-4-outcome_analysis.qmd`): Fit outcome models and pool results
4. **Sensitivity Analysis** (`reanalysis-5-sensitivity.qmd`): Compare complete case vs imputed results