---
title: "Reanalysis Step 1: Data Preparation"
subtitle: "Loading and preparing the combined dataset for multiple imputation analysis"
author: "Erik Westlund"
date: "`r Sys.Date()`"
format: html
---

## Setup

```{r setup}
#| include: false
# Setup analysis environment
source("dependencies.R")
setup_analysis()
```

## Data Loading

```{r load-data}
# Load the combined dataset
df_combined <- readr::read_csv(reanalysis_data_file_path)
```

## Define Analysis Variables

```{r define-variables}
# Variables for propensity score model
ps_vars <- c(
  "baseline_VA_logMAR",
  "gender",
  "race_ethnicity_gp", 
  "insurance_gp",
  "age",
  "CCI",
  "DCSI",
  "other_inject",
  "anti_VEGF",
  "focal_laser_flag",
  "PRP_flag",
  "Glaucoma_bef_hitplus",
  "Otherretina_bef_hitplus",
  "cataract_surgery_bef_hitplus"
)

# Variables for outcome models
outcome_vars <- c(
  "outcome_VA_logMAR",
  "person_ever_lapse"
)

# Variables for DR severity and treatment categorization
dr_vars <- c(
  "No_DR",
  "NPDR",
  "PDR"
)

# All analysis variables
all_analysis_vars <- c(
  "e_mrn_deidentified",  # Patient ID
  ps_vars,
  outcome_vars,
  dr_vars
)
```

## Variable Creation

```{r create-variables}
# Create analysis dataset with necessary transformations
df_analysis <- df_combined |>
  mutate(
    # Outcome variables
    outcome_va_vi = outcome_VA_logMAR >= 0.3,
    outcome_va_vi_binary = if_else(outcome_va_vi, 1, 0),
    outcome_va_blind = outcome_VA_logMAR >= 1,
    outcome_va_blind_binary = if_else(outcome_va_blind, 1, 0),
    
    # Exposure variable
    ever_lapse_binary = if_else(person_ever_lapse == TRUE, 1, 0),
    
    # Demographic factors
    gender_cat = factor(gender),
    race_ethnic_cat = factor(race_ethnicity_gp),
    insurance_cat = factor(insurance_gp),
    age_cat = cut(age, breaks = c(0, 20, 45, 65, Inf), 
                  labels = c("0-20", "21-45", "46-65", "65+")),
    
    # DR severity (0 = No DR, 1 = NPDR, 2 = PDR)
    person_dr = case_when(
      No_DR == TRUE ~ 0,
      NPDR == "Mild" | NPDR == "Moderate" | NPDR == "Severe" ~ 1,
      PDR == "Present" ~ 2
    ),
    
    # DR severity detailed (for stratified analyses)
    person_dr_severity = case_when(
      No_DR == TRUE ~ 0,
      NPDR == "Mild" ~ 1,
      NPDR == "Moderate" ~ 2,
      NPDR == "Severe" ~ 3,
      PDR == "Present" ~ 4
    ),
    
    # DR severity factor for interaction models
    dr_severity = factor(person_dr,
                        levels = c(0, 1, 2),
                        labels = c("No_DR", "NPDR", "PDR")),
    
    # Treatment type categorization
    treatment_type = case_when(
      anti_VEGF == 1 ~ "anti_VEGF",
      PRP_flag == 1 ~ "PRP",
      other_inject == 1 | focal_laser_flag == 1 ~ "other_treatment",
      TRUE ~ "no_treatment"
    ),
    treatment_type = factor(treatment_type, 
                           levels = c("no_treatment", "anti_VEGF", "PRP", "other_treatment")),
    
    # Binary treatment indicator
    any_treatment = as.numeric(anti_VEGF == 1 | PRP_flag == 1 | 
                              other_inject == 1 | focal_laser_flag == 1),
    
    # Comorbidity indicators as factors
    glaucoma_bef_hitplus_cat = factor(if_else(Glaucoma_bef_hitplus == "Present", 1, 0)),
    otherretina_bef_hitplus_cat = factor(if_else(Otherretina_bef_hitplus == "Present", 1, 0)),
    catsurg_before_hitplus_cat = factor(cataract_surgery_bef_hitplus),
    
    # Treatment indicators as factors
    other_inject = factor(other_inject),
    anti_VEGF = factor(anti_VEGF),
    focal_laser_flag = factor(focal_laser_flag),
    PRP_flag = factor(PRP_flag)
  )
```

## Missing Data Assessment

```{r missing-assessment}
# Variables used in propensity score model
ps_model_vars <- c(
  "ever_lapse_binary",
  "baseline_VA_logMAR",
  "gender_cat",
  "race_ethnic_cat", 
  "insurance_cat",
  "age_cat",
  "CCI",
  "DCSI",
  "other_inject",
  "anti_VEGF",
  "focal_laser_flag",
  "PRP_flag",
  "glaucoma_bef_hitplus_cat",
  "otherretina_bef_hitplus_cat",
  "catsurg_before_hitplus_cat"
)

# Variables used in outcome model
outcome_model_vars <- c(
  "outcome_va_vi_binary",
  ps_model_vars  # All PS vars are also in outcome model
)

# Assess missing data for analysis variables
missing_summary <- df_analysis |>
  dplyr::select(dplyr::all_of(c(ps_model_vars, "outcome_va_vi_binary"))) |>
  dplyr::summarise(dplyr::across(everything(), ~ sum(is.na(.)))) |>
  tidyr::pivot_longer(everything(), names_to = "variable", values_to = "n_missing") |>
  dplyr::mutate(
    pct_missing = round(n_missing / nrow(df_analysis) * 100, 2),
    var_type = dplyr::case_when(
      variable %in% c("outcome_va_vi_binary") ~ "Outcome",
      variable == "ever_lapse_binary" ~ "Exposure",
      TRUE ~ "Covariate"
    )
  ) |>
  dplyr::arrange(desc(n_missing))

# Display missing data summary
missing_summary |> 
  filter(n_missing > 0) |>
  kable(caption = "Variables with missing data (for imputation)")
```

## Data Summary for Analysis Variables

```{r data-summary}
# Summary of key variables
summary_vars <- c(
  "outcome_va_vi_binary",
  "ever_lapse_binary", 
  "dr_severity",
  "treatment_type",
  "age",
  "CCI",
  "DCSI"
)

# Create summary table
df_analysis |>
  dplyr::select(dplyr::all_of(summary_vars)) |>
  summary()

# Distribution of outcome by exposure
table(df_analysis$outcome_va_vi_binary, df_analysis$ever_lapse_binary, 
      dnn = c("Vision Impairment", "Ever Lapsed"))

# Distribution of DR severity
table(df_analysis$dr_severity, useNA = "ifany")

# Distribution of treatment types
table(df_analysis$treatment_type, useNA = "ifany")
```

## Complete Case Analysis Dataset

```{r complete-cases}
# For comparison, create complete case dataset (no missing values)
df_complete <- df_analysis |>
  filter(!is.na(CCI) & !is.na(DCSI) & !is.na(baseline_VA_logMAR))

# Summary of exclusions
n_total <- nrow(df_analysis)
n_complete <- nrow(df_complete)
n_excluded <- n_total - n_complete

tibble(
  Dataset = c("Full dataset", "Complete cases", "Excluded"),
  N = c(n_total, n_complete, n_excluded),
  Percent = c(100, round(n_complete/n_total*100, 1), round(n_excluded/n_total*100, 1))
) |>
  kable(caption = "Complete case analysis summary")
```

## Save Prepared Data

```{r save-data}
# Create directories if they don't exist
if (!dir.exists(reanalysis_data_dir)) {
  dir.create(reanalysis_data_dir, recursive = TRUE)
}

# Save the prepared dataset to network drive
saveRDS(df_analysis, file.path(reanalysis_data_dir, "df_analysis_prepared.rds"))
saveRDS(df_complete, file.path(reanalysis_data_dir, "df_complete_cases.rds"))

# Save variable lists for use in other scripts
variable_lists <- list(
  ps_model_vars = ps_model_vars,
  outcome_model_vars = outcome_model_vars,
  dr_vars = dr_vars,
  all_analysis_vars = all_analysis_vars
)
saveRDS(variable_lists, file.path(reanalysis_data_dir, "variable_lists.rds"))

# Confirm files saved
message("Data saved to: ", reanalysis_data_dir)
```

## Summary

```{r summary}
# Final summary
tibble(
  Metric = c(
    "Total observations",
    "Complete cases for main analysis", 
    "Missing CCI/DCSI",
    "Missing baseline VA",
    "Patients who lapsed",
    "Patients with vision impairment"
  ),
  N = c(
    nrow(df_analysis),
    nrow(df_complete),
    sum(is.na(df_analysis$CCI) | is.na(df_analysis$DCSI)),
    sum(is.na(df_analysis$baseline_VA_logMAR)),
    sum(df_analysis$ever_lapse_binary == 1, na.rm = TRUE),
    sum(df_analysis$outcome_va_vi_binary == 1, na.rm = TRUE)
  )
) |>
  kable(caption = "Dataset summary for reanalysis")
```

## Next Steps

1. **Multiple Imputation** (`reanalysis-2-multiple_imputation.qmd`): Impute missing values in covariates
2. **Propensity Score Analysis** (`reanalysis-3-propensity_scores.qmd`): Calculate PS using various methods on imputed datasets
3. **Outcome Analysis** (`reanalysis-4-outcome_analysis.qmd`): Fit outcome models and pool results
4. **Sensitivity Analysis** (`reanalysis-5-sensitivity.qmd`): Compare complete case vs imputed results